{"version":3,"sources":["ShaderReaderCom.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/script/shader","sourcesContent":["\nlet default_vert = `\n    attribute vec4 a_position;\n    attribute vec2 a_texCoord;\n    attribute vec4 a_color;\n    varying vec2 v_texCoord;\n    varying vec4 v_fragmentColor;\n    void main()\n    {\n        gl_Position = CC_PMatrix * a_position;\n        v_fragmentColor = a_color;\n        v_texCoord = a_texCoord;\n    }\n    `;\n\nlet gray_frag = `\n    #ifdef GL_ES\n    precision mediump float;\n    #endif\n    varying vec4 v_fragmentColor;\n    varying vec2 v_texCoord;\n    void main()\n    {\n        vec4 c = v_fragmentColor * texture2D(CC_Texture0, v_texCoord);\n        gl_FragColor.xyz = vec3(0.2126*c.r + 0.7152*c.g + 0.0722*c.b);\n        gl_FragColor.w = c.w;\n    }\n    `;\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class ShaderReaderCom extends cc.Component {\n    @property\n    flagShader: string = \"\";\n\n    @property\n    startOnLoad = false;\n\n    frag_glsl = {\n        default: \"\",\n        visible: false,\n    };\n\n    _isStarted = false;\n\n    uniformMap = null;\n    _program = null;\n    onLoad() {\n        this.initUnformData();\n        var self = this;\n        cc.loader.loadRes(self.flagShader, function (err, txt) {\n            if (err) {\n                cc.log(err)\n            } else {\n                self.frag_glsl = txt;\n                console.log(\"KKK\" + self.frag_glsl);\n            }\n        });\n        if (this.startOnLoad) {\n            this.startShader();\n        }\n    }\n    initUnformData() {\n        this.uniformMap = {\n            time: {\n                type: \"float\",\n                value: 0.0\n            }\n        }\n    }\n    startShader() {\n        this.scheduleOnce(() => {\n            this.initUniform();\n        }, 0);\n    }\n\n    initUniform() {\n        if (this._isStarted) {\n            console.log(\"startShader warning ==> 重复启动\");\n            return;\n        }\n        if (cc.sys.isNative) {\n            console.log(\"use native GLProgram\");\n            this._program = new cc.GLProgram();\n            this._program.initWithString(default_vert, this.frag_glsl);\n            // this._program.initWithString(default_vert, gray_frag);\n            this._program.addAttribute(cc.macro.ATTRIBUTE_NAME_POSITION, cc.macro.VERTEX_ATTRIB_POSITION);\n            this._program.addAttribute(cc.macro.ATTRIBUTE_NAME_COLOR, cc.macro.VERTEX_ATTRIB_COLOR);\n            this._program.addAttribute(cc.macro.ATTRIBUTE_NAME_TEX_COORD, cc.macro.VERTEX_ATTRIB_TEX_COORDS);\n            this._program.link();\n            this._program.updateUniforms();\n        }\n        if (cc.sys.isNative) {\n            var glProgram_state = cc.GLProgramState.getOrCreateWithGLProgram(this._program);\n            for (var key in this.uniformMap) {\n                this.setUniform(glProgram_state, this.uniformMap[key].type, key, this.uniformMap[key].value);\n            }\n        }\n        this.setProgram(this.node._sgNode, this._program);\n        this._isStarted = true;\n    }\n\n    updateUniform() {\n        if (this._program) {\n            this._program.use();\n            if (cc.sys.isNative) {\n                var glProgram_state = cc.GLProgramState.getOrCreateWithGLProgram(this._program);\n                for (var key in this.uniformMap) {\n                    this.setUniform(glProgram_state, this.uniformMap[key].type, key, this.uniformMap[key].value);\n                }\n            }\n        }\n    }\n\n    initCustomUniform(map) {\n        for (var key in map) {\n            this.uniformMap[key] = map[key];\n        }\n    }\n\n    updateCustomUniform(map: any) {\n        for (var key in map) {\n            if (!this.uniformMap[key]) {\n                console.log('updateCustomUniform error ==> ' + '\"' + key + '\"' + '这个自定义key没有被初始化');\n                continue;\n            }\n            this.uniformMap[key] = map[key];\n        }\n    }\n\n    setUniform(gps, t, k, v) {\n        switch (t) {\n            case \"float\":\n                gps.setUniformFloat(k, v);\n                break;\n            case \"vec2\":\n                gps.setUniformVec2(k, v);\n                break;\n            case \"vec3\":\n                gps.setUniformVec3(k, v);\n                break;\n            case \"vec4\":\n                gps.setUniformVec4(k, v);\n                break;\n            default:\n                console.log('shader error ==> uniform无\"' + type + '\"类型');\n        }\n    }\n\n    setProgram(node, program) {\n        if (cc.sys.isNative) {\n            var glProgram_state = cc.GLProgramState.getOrCreateWithGLProgram(program);\n            node.setGLProgramState(glProgram_state);\n        }\n        var children = node.children;\n        if (!children) return;\n        for (var i = 0; i < children.length; i++) {\n            this.setProgram(children[i], program);\n        }\n    }\n\n    update(dt) {\n        if (this._isStarted) {\n            this.uniformMap.time.value += dt;\n            this.updateUniform();\n        }\n    }\n}\n\n/*\n\n     【 帮助文档 】\n\n<<< glsl代码模板 >>>\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\nvarying vec2 v_texCoord;\nuniform float time;\nvoid main(){}\n\n<<< 自定义uniform的使用格式 >>>\nuMap = {\n    u0:{\n        type:\"float\",\n        value: 0.0,\n    },\n    u1:{\n        type:\"vec2\",\n        value: {x:0.0,y:0.0},\n    }\n}\ninitCustomUniform来初始化自定义的uniform参数\nstartShader启动shader\nupdateCustomUniform更新uniform参数\n\n*/\n"]}
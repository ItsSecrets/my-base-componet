{"version":3,"sources":["Utils.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../assets/script","sourcesContent":["\n\nexport class Utils {\n    constructor(parameters) {\n        \n    }\n\n\n    static cocosBuildImg(imgWidth, imgHeight, buildNode, imgPathAndName, bFormat: boolean = true, rect?: cc.Rect, fullScreen?: boolean): string {\n        if (imgWidth <= 0 || imgHeight <= 0) {\n            console.log(\"imgWidth or imgHeight <= 0\");\n            return \"\";\n        }\n\n        if (!buildNode) {\n            console.log(\"buildNode is null\");\n            return \"\";\n        }\n\n        if (!imgPathAndName) {\n            console.log(\"imgPathAndName is null\");\n            return \"\";\n        }\n\n        //解析文件名字和路径\n        let imgPath = \"\";\n        let imgName = \"\";\n        let index = imgPathAndName.lastIndexOf(\"/\");\n        if (index > 0) {\n            imgPath = imgPathAndName.substring(0, index + 1);\n            imgName = imgPathAndName.substring(index + 1, imgPathAndName.length);\n        } else {\n            imgName = imgPathAndName;\n            imgPath = cc.gameName ? cc.gameName + \"/\" : imgPath;\n        }\n\n        if (imgName.length > 3 && imgName.substring(imgName.length - 3, imgName.length) != \"png\") {\n            imgName = imgName + \".png\";\n        }\n\n        if (imgName.length <= 3) {\n            imgName = imgName + \".png\";\n        }\n\n        //如果没有文件需要创建文件\n        let path = jsb.fileUtils.getWritablePath() + imgPath; //2\n        //防止文件路径乱码\n        if (jsb.fileUtils.isFileExist(path)) {\n            jsb.fileUtils.removeFile(path);\n        }\n        let isSuccess = jsb.fileUtils.createDirectory(jsb.fileUtils.getWritablePath() + imgPath);\n        if (!isSuccess) {\n            console.log(\"create path is fail\");\n            return \"\";\n        }\n        // if (!jsb.fileUtils.isFileExist(path)) {\n        //     let isSuccess = jsb.fileUtils.createDirectory(jsb.fileUtils.getWritablePath() + imgPath);\n        //     if (!isSuccess) {\n        //         console.log(\"create path is fail\");\n        //         return false;\n        //     }\n        // }\n\n        //全屏截图时，把自动裁剪功能关闭，保证屏幕外的内容也能截到！！！\n        if (fullScreen) {\n            cc.director.setCullingEnabled(false);\n        }\n\n        //如果待截图的场景中含有 mask，请开启下面注释的语句\n        // var renderTexture = cc.RenderTexture.create(1280,640, cc.Texture2D.PIXEL_FORMAT_RGBA8888, gl.DEPTH24_STENCIL8_OES);\n        let renderTexture = cc.RenderTexture.create(imgWidth, imgHeight, cc.Texture2D.PIXEL_FORMAT_RGBA8888, gl.DEPTH24_STENCIL8_OES); //1334\n        if (!renderTexture) {\n            console.log(\"create RenderTexture is null\");\n            return \"\";\n        }\n\n        //把 renderTexture 添加到场景中去，否则生成的时候，场景中的元素会移动\n        //这行代码会导致有些内容渲染不出来 此项目中不用这种方式，采用把渲染节点的锚点改成（0，0）的方式\n        // buildNode._sgNode.addChild(renderTexture);\n        //把 renderTexture 设置为不可见，可以避免生成图片成功后，移除 renderTexture 造成的闪烁\n        renderTexture.active = false;\n        //实际的代码\n        renderTexture.begin();\n        //buildNode.node 是我们要生成的节点\n        buildNode._sgNode.visit(); //_sgNode.visit();\n        renderTexture.end();\n\n        let buildScuess = false;\n\n        if (rect) {\n            let renderTexture1 = cc.RenderTexture.create(rect.width, rect.height, cc.Texture2D.PIXEL_FORMAT_RGBA8888, gl.DEPTH24_STENCIL8_OES);\n            renderTexture.setPosition(rect.width / 2, rect.height / 2);\n            renderTexture1.begin();\n            renderTexture.visit();\n            renderTexture1.end();\n            buildScuess = renderTexture1.saveToFile(imgPath + imgName, cc.ImageFormat.PNG, bFormat, function () {\n                console.log(\"build image by rect successfully!\");\n                let shareImgPath = jsb.fileUtils.getWritablePath() + imgPath + imgName;\n            });\n        } else {\n            buildScuess = renderTexture.saveToFile(imgPath + imgName, cc.ImageFormat.PNG, bFormat, function () {\n                console.log(\"build image successfully!\");\n                cc.director.setCullingEnabled(true);\n                let shareImgPath = jsb.fileUtils.getWritablePath() + imgPath + imgName;\n            })\n        }\n\n        // let that = this;\n        // let buildScuess = renderTexture.saveToFile(imgPath + imgName, cc.ImageFormat.PNG, true, function () {\n        //     //把 renderTexture 从场景中移除\n        //     // renderTexture.removeFromParent();\n        //     //that.shareNode.removeAllChildren(true);\n        //     console.log(\"build image successfully!\");\n        //     let shareImgPath = jsb.fileUtils.getWritablePath() + imgPath + imgName;\n        //     // cc.loader.release(shareImgPath);\n        //     // cc.loader.load(shareImgPath, function (err, tex) {\n        //     //     if (err || !(tex instanceof cc.Texture2D)) {\n        //     //         console.log('loadFromUrl::web::load::err', err);\n        //     //     }\n        //     //     else {\n        //     //         console.log('loadFromUrl::web::load::sucess', shareImgPath);\n        //     //     }\n        //     //     EventCenter.post(EventType.POP_PHOTO_UI, { path: shareImgPath,\n        //     //         spriteFrame: new cc.SpriteFrame(tex), entertype:PhotoEnterType.TakePhoto});\n        //     // });\n        //\n        //     EventCenter.post(EventType.POP_PHOTO_UI, { path: shareImgPath, enterType: PhotoEnterType.TakePhoto });\n        // });\n\n        if (!buildScuess) {\n            console.log(\"save image fail!\");\n            return \"\";\n        }\n\n        console.log(\"###imgPath = \", jsb.fileUtils.getWritablePath() + imgPath + imgName);\n\n\n        return jsb.fileUtils.getWritablePath() + imgPath + imgName;\n        // return shareImgPath;\n    }\n}"]}
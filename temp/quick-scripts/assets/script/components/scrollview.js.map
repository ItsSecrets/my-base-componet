{"version":3,"sources":["scrollview.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/script/components","sourcesContent":["export class ScrollView\n{\n    private scrollview:cc.ScrollView;\n    private mask:cc.Node;\n    private content:cc.Node;\n    private item_templates:Map<string, cc.Node>;\n    private node_pools:Map<string, cc.Node[]>;\n\n    private dir:number;\n    private width:number;\n    private height:number;\n    private gap_x:number;\n    private gap_y:number;\n    private cb_host:any;\n    private item_setter:(item:cc.Node, key:string, data:any, index:number)=>[number, number];\n    private recycle_cb:(item:cc.Node, key:string)=>void;\n    private scroll_to_end_cb:()=>void;\n    private auto_scrolling:boolean;\n    private items:ScrollItem[];\n    private start_index:number;\n    private stop_index:number;\n\n    constructor(params:ScrollViewParams)\n    {\n        this.scrollview = params.scrollview;\n        this.mask = params.mask;\n        this.content = params.content;\n        this.node_pools = new Map();\n        this.item_templates = new Map();\n        params.item_templates.forEach((tpl) => {\n            tpl.node.active = false;\n            this.item_templates.set(tpl.key, tpl.node);\n        });\n\n        this.dir = params.direction || ScrollDirection.Vertical;\n        this.width = params.width || this.mask.width;\n        this.height = params.height || this.mask.height;\n        this.gap_x = params.gap_x || 0;\n        this.gap_y = params.gap_y || 0;\n        this.cb_host = params.cb_host;\n        this.item_setter = params.item_setter;\n        this.recycle_cb = params.recycle_cb;\n        this.scroll_to_end_cb = params.scroll_to_end_cb;\n        this.auto_scrolling = params.auto_scrolling || false;\n\n        if(this.dir == ScrollDirection.Vertical)\n        {\n            this.content.width = this.width;\n        }\n        else\n        {\n            this.content.height = this.height;\n        }\n        this.mask.setContentSize(this.width, this.height);\n        this.mask.addComponent(cc.Mask);\n        this.scrollview.node.setContentSize(this.width, this.height);\n        this.scrollview.vertical = this.dir == ScrollDirection.Vertical;\n        this.scrollview.horizontal = this.dir == ScrollDirection.Horizontal;\n        this.scrollview.inertia = true;\n        this.scrollview.node.on(\"scrolling\", this.on_scrolling, this);\n        this.scrollview.node.on(\"scroll-to-bottom\", this.on_scroll_to_end, this);\n        this.scrollview.node.on(\"scroll-to-right\", this.on_scroll_to_end, this);\n        // cc.info(\"constructor\", this.mask.width, this.mask.height, this.scrollview.node.width, this.scrollview.node.height, this.content.width, this.content.height);\n    }\n\n    private on_scroll_to_end()\n    {\n        if(this.scroll_to_end_cb)\n        {\n            this.scroll_to_end_cb.call(this.cb_host);\n        }\n    }\n\n    private on_scrolling()\n    {\n        if(!this.items || !this.items.length)\n        {\n            return;\n        }\n        if(this.dir == ScrollDirection.Vertical)\n        {\n            let posy:number = this.content.y;\n            // cc.info(\"onscrolling, content posy=\", posy);\n            if(posy < 0)\n            {\n                posy = 0;\n            }\n            if(posy > this.content.height - this.height)\n            {\n                posy = this.content.height - this.height;\n            }\n            let start:number = 0;\n            let stop:number = this.items.length - 1;\n            let viewport_start:number = -posy;\n            let viewport_stop:number = viewport_start - this.height;\n            while(this.items[start].y - this.items[start].height > viewport_start)\n            {\n                start++;\n            }\n            while(this.items[stop].y < viewport_stop)\n            {\n                stop--;\n            }\n            if(start != this.start_index && stop != this.stop_index)\n            {\n                this.start_index = start;\n                this.stop_index = stop;\n                cc.info(\"render_from:\", start, stop);\n                this.render_items();\n            }\n        }\n        else\n        {\n            let posx:number = this.content.x;\n            // cc.info(\"onscrolling, content posx=\", posx);\n            if(posx > 0)\n            {\n                posx = 0;\n            }\n            if(posx < this.width - this.content.width)\n            {\n                posx = this.width - this.content.width;\n            }\n            let start:number = 0;\n            let stop:number = this.items.length - 1;\n            let viewport_start:number = -posx;\n            let viewport_stop:number = viewport_start + this.width;\n            while(this.items[start].x + this.items[start].width < viewport_start)\n            {\n                start++;\n            }\n            while(this.items[stop].x > viewport_stop)\n            {\n                stop--;\n            }\n            if(start != this.start_index && stop != this.stop_index)\n            {\n                this.start_index = start;\n                this.stop_index = stop;\n                cc.info(\"render_from:\", start, stop);\n                this.render_items();\n            }\n        }\n    }\n\n    private spawn_node(key:string):cc.Node\n    {\n        let node:cc.Node;\n        let pools:cc.Node[] = this.node_pools.get(key);\n        if(pools && pools.length > 0)\n        {\n            node = pools.pop();\n        }\n        else\n        {\n            node = cc.instantiate(this.item_templates.get(key));\n            node.active = true;\n            cc.info(\"spawn_node, key=\", key);\n        }\n        node.parent = this.content;\n        return node;\n    }\n\n    private recycle_item(item:ScrollItem)\n    {\n        if(item.node && cc.isValid(item.node))\n        {\n            let pools:cc.Node[] = this.node_pools.get(item.data.key);\n            if(!pools)\n            {\n                pools = [];\n                this.node_pools.set(item.data.key, pools);\n            }\n            pools.push(item.node);\n            if(this.recycle_cb)\n            {\n                this.recycle_cb.call(this.cb_host, item.node, item.data.key);\n            }\n            item.node.removeFromParent();\n            item.node = null;\n        }\n    }\n\n    private clear_items()\n    {\n        if(this.items)\n        {\n            this.items.forEach((item) => {\n                this.recycle_item(item);        \n            });\n        }\n    }\n\n    private render_items()\n    {\n        let item:ScrollItem;\n        for(let i:number = 0; i < this.start_index; i++)\n        {\n            item = this.items[i];\n            if(item.node)\n            {\n                cc.info(\"recycle_item\", i);\n                this.recycle_item(item);\n            }\n        }\n        for(let i:number = this.items.length - 1; i > this.stop_index; i--)\n        {\n            item = this.items[i];\n            if(item.node)\n            {\n                cc.info(\"recycle_item\", i);\n                this.recycle_item(item);\n            }\n        }\n        for(let i:number = this.start_index; i <= this.stop_index; i++)\n        {\n            item = this.items[i];\n            if(!item.node)\n            {\n                cc.info(\"render_item\", i);\n                item.node = this.spawn_node(item.data.key);\n                this.item_setter.call(this.cb_host, item.node, item.data.key, item.data.data, i);\n            }\n            item.node.setPosition(item.x, item.y);\n        }\n    }\n\n    private pack_item(index:number, data:ScrollItemData):ScrollItem\n    {\n        let node:cc.Node = this.spawn_node(data.key);\n        let [width, height]:[number, number] = this.item_setter.call(this.cb_host, node, data.key, data.data, index);\n        let item:ScrollItem = {x:0, y:0, width:width, height:height, data:data, node:node};\n        this.recycle_item(item);\n        return item;\n    }\n\n    private layout_items(start:number)\n    {\n        // cc.info(\"layout_items, start=\", start);\n        if(this.items.length <= 0)\n        {\n            return;\n        }\n        let start_pos:number = 0;\n        if(start > 0)\n        {\n            let prev_item:ScrollItem = this.items[start - 1];\n            if(this.dir == ScrollDirection.Vertical)\n            {\n                start_pos = prev_item.y - prev_item.height - this.gap_y;\n            }\n            else\n            {\n                start_pos = prev_item.x + prev_item.width + this.gap_x;\n            }\n        }\n        for(let index:number = start, stop:number = this.items.length; index < stop; index++)\n        {\n            let item:ScrollItem = this.items[index];\n            if(this.dir == ScrollDirection.Vertical)\n            {\n                item.x = 0;\n                item.y = start_pos;\n                start_pos -= item.height + this.gap_y;\n            }\n            else\n            {\n                item.y = 0;\n                item.x = start_pos;\n                start_pos += item.width + this.gap_x;\n            }\n        }\n    }\n\n    private resize_content()\n    {\n        if(this.items.length <= 0)\n        {\n            this.content.width = 0;\n            this.content.height = 0;\n            return;\n        }\n        let last_item:ScrollItem = this.items[this.items.length - 1];\n        if(this.dir == ScrollDirection.Vertical)\n        {\n            this.content.height = Math.max(this.height, last_item.height - last_item.y);\n        }\n        else\n        {\n            this.content.width = Math.max(this.width, last_item.x + last_item.width);\n        }\n        // cc.info(\"resize_content\", this.mask.width, this.mask.height, this.scrollview.node.width, this.scrollview.node.height, this.content.width, this.content.height);\n    }\n\n    set_data(datas:ScrollItemData[])\n    {\n        this.clear_items();\n        this.items = [];\n        datas.forEach((data, index) => {\n            let item:ScrollItem = this.pack_item(index, data);\n            this.items.push(item);\n        });\n        this.layout_items(0);\n        this.resize_content();\n        this.start_index = -1;\n        this.stop_index = -1;\n        if(this.dir == ScrollDirection.Vertical)\n        {\n            this.content.y = 0;\n        }\n        else\n        {\n            this.content.x = 0;\n        }\n        if(this.items.length > 0)\n        {\n            this.on_scrolling();\n        }\n    }\n\n    insert_data(index:number, ...datas:ScrollItemData[])\n    {\n        if(datas.length == 0 )\n        {\n            cc.info(\"nothing to insert\");\n            return;\n        }\n        if(!this.items)\n        {\n            this.items = [];\n        }\n        if(index < 0 || index > this.items.length)\n        {\n            cc.warn(\"invalid index\", index);\n            return;\n        }\n        let is_append:boolean = index == this.items.length;\n        let items:ScrollItem[] = [];\n        datas.forEach((data, index) => {\n            let item:ScrollItem = this.pack_item(index, data);\n            items.push(item);\n        });\n        this.items.splice(index, 0, ...items);\n        this.layout_items(index);\n        this.resize_content();\n        this.start_index = -1;\n        this.stop_index = -1;\n\n        if(this.auto_scrolling && is_append)\n        {\n            this.scroll_to_end();\n        }\n        this.on_scrolling();\n    }\n\n    append_data(...datas:ScrollItemData[])\n    {\n        if(!this.items)\n        {\n            this.items = [];\n        }\n        this.insert_data(this.items.length, ...datas);\n    }\n\n    scroll_to_end()\n    {\n        if(this.dir == ScrollDirection.Vertical)\n        {\n            this.scrollview.scrollToBottom();\n        }\n        else\n        {\n            this.scrollview.scrollToRight();\n        }\n    }\n\n    destroy()\n    {\n        this.clear_items();\n        this.node_pools.forEach((pools, key) => {\n            pools.forEach((node) => {\n                node.destroy();\n            });\n        });\n        this.node_pools = null;\n        this.items = null;\n        \n        if(cc.isValid(this.scrollview.node))\n        {\n            this.scrollview.node.off(\"scrolling\", this.on_scrolling, this);\n            this.scrollview.node.off(\"scroll-to-bottom\", this.on_scroll_to_end, this);\n            this.scrollview.node.off(\"scroll-to-right\", this.on_scroll_to_end, this);\n        }\n    }\n}\n\nexport type ScrollItemTemplate = {\n    key:string;\n    node:cc.Node;\n}\n\nexport type ScrollItemData = {\n    key:string;\n    data:any;\n}\n\nexport enum ScrollDirection \n{\n    Vertical = 1,\n    Horizontal = 2,\n}\n\ntype ScrollViewParams = {\n    scrollview:cc.ScrollView;\n    mask:cc.Node;\n    content:cc.Node;\n    item_templates:ScrollItemTemplate[];\n    direction?:ScrollDirection;\n    width?:number;\n    height?:number;\n    gap_x?:number;\n    gap_y?:number;\n    cb_host?:any;                                                                       //回调函数host\n    item_setter:(item:cc.Node, key:string, data:any, index:number)=>[number, number];   //item更新setter\n    recycle_cb?:(item:cc.Node, key:string)=>void;                                                   //回收时的回调\n    scroll_to_end_cb?:()=>void;                                                         //滚动到尽头的回调\n    auto_scrolling?:boolean;                                                            //append时自动滚动到尽头\n}\n\ntype ScrollItem = {\n    x:number;\n    y:number;\n    width:number;\n    height:number;\n    data:ScrollItemData;\n    node:cc.Node;\n}"]}
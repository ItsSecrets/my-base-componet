{"version":3,"sources":["toast.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/script/components","sourcesContent":["import {pool_mgr} from \"../pool/pool_mgr\"\nimport {handler, gen_handler} from \"../utils\"\nimport {appdata} from \"../../appdata\"\nimport {TweenUtil} from \"../tween/tweenutil\"\n\nexport class toast\n{\n    private static inst:toast;\n    private anchors:cc.Node[];\n    private pool_nodes:cc.Node[];\n    private using_nodes:cc.Node[];\n\n    private constructor()\n    {\n        this.pool_nodes = [];\n        this.using_nodes = [];\n        this.anchors = [];\n\n        appdata.app.toast.children.forEach((node) => {\n            if(node.name.indexOf(\"tip\") != -1)\n            {\n                this.pool_nodes.push(node);\n            }\n            if(node.name.indexOf(\"anchor\") != -1)\n            {\n                this.anchors.push(node);\n            }\n        });\n    }\n\n    static get_inst():toast\n    {\n        if(!this.inst)\n        {\n            this.inst = new toast();\n        }\n        return this.inst;\n    }\n    \n    static show(content:string)\n    {\n        toast.get_inst().show(content);\n    }\n\n    show(content:string)\n    {\n        let node = this.pool_nodes.pop();\n        if(!node)\n        {\n            this.layout_nodes();\n            node = this.using_nodes.shift();\n            node.removeFromParent();\n        }\n        this.using_nodes.push(node);\n\n        //找到第一个空的位置\n        let anchor = this.anchors.find((ar) => {\n            return ar.childrenCount == 0;\n        });\n        node.parent = anchor;\n        node.setPosition(0, 0);\n        this.handle_node(node, content);\n        this.set_top();\n    }\n\n    private handle_node(node:cc.Node, content:string)\n    {\n        node.active = true;\n        node.opacity = 255;\n        this.set_content(node, content);\n        node.runAction(cc.sequence(cc.delayTime(1.5), cc.fadeOut(0.4), cc.callFunc(this.on_node_hide, this, node)));\n    }\n\n    private set_content(node:cc.Node, content:string)\n    {\n        let bg_node:cc.Node = node.getChildByName(\"bg\");\n        let txt_node:cc.Node = node.getChildByName(\"txt\");\n        let txt = txt_node.getComponent(cc.Label);\n        txt.overflow = cc.Label.Overflow.NONE;\n        txt.string = content;\n        // cc.info(\"set_content, width=\", txt_node.width);\n        // if(txt_node.width > 500)\n        // {\n        //     txt.overflow = cc.Label.Overflow.RESIZE_HEIGHT;\n        //     txt_node.width = 500;\n        // }\n        bg_node.setContentSize(txt_node.width + 20, txt_node.height + 20);\n    }\n\n    private on_node_hide(node:cc.Node)\n    {\n        node.removeFromParent();\n        let index = this.using_nodes.findIndex((pnode) => {\n            return pnode == node;\n        });\n        this.using_nodes.splice(index, 1);\n        this.pool_nodes.push(node);\n    }\n\n    private set_top()\n    {\n        let toast = appdata.app.toast;\n        toast.setSiblingIndex(toast.parent.childrenCount - 1);\n    }\n\n    private layout_nodes()\n    {\n        if(this.using_nodes.length <= 0)\n        {\n            return;\n        }\n        for(let i = this.using_nodes.length - 1; i > 0; i--)\n        {\n            this.using_nodes[i].parent = this.using_nodes[i-1].parent;\n            this.using_nodes[i].setPosition(0, 0);\n        }\n    }\n}"]}
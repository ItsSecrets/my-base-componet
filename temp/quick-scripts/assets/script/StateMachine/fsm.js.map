{"version":3,"sources":["fsm.ts"],"names":[],"mappings":";;;;;AAAA;;GAEG;AACH,6CAA4C;AAC5C,+CAA8C;AAC9C,+CAA8C;AAC9C,+CAA8C;AAG9C;IAGI,aAAY,UAAU;QAFtB,aAAQ,GAA2B,IAAI,CAAC;QACxC,iBAAY,GAAc,IAAI,CAAC;QAE3B,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;IAC9B,CAAC;IAED,uBAAS,GAAT;QACI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,cAAc,EAAE,IAAI,2BAAY,CAAC,IAAI,CAAC,CAAC,CAAC;QACjE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,2BAAY,CAAC,IAAI,CAAC,CAAC,CAAC;QAChE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,2BAAY,CAAC,IAAI,CAAC,CAAC,CAAC;QAChE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,yBAAW,CAAC,IAAI,CAAC,CAAC,CAAC;IAClE,CAAC;IAED,yBAAW,GAAX,UAAY,KAAa;QACrB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC;QAC5B,CAAC;QACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC7C,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC9B,CAAC;IACL,CAAC;IAED,oBAAM,GAAN,UAAO,EAAU;QACb,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACjC,CAAC;IACL,CAAC;IACL,UAAC;AAAD,CA7BA,AA6BC,IAAA;AA7BY,kBAAG;AA+BhB,IAAY,MAKX;AALD,WAAY,MAAM;IACd,uDAAc,CAAA;IACd,qDAAa,CAAA;IACb,qDAAa,CAAA;IACb,mDAAY,CAAA;AAChB,CAAC,EALW,MAAM,GAAN,cAAM,KAAN,cAAM,QAKjB","file":"","sourceRoot":"../../../../../assets/script/StateMachine","sourcesContent":["/**\n * 增加简单状态机\n */\nimport { DivingState } from './DivingState';\nimport { DuckingState } from './DuckingState';\nimport { JumpingState } from './JumpingState';\nimport { StadingState } from './StadingState';\nimport { BaseState } from \"./BaseState\";\n\nexport class fsm {\n    stateMap: Map<number, BaseState> = null;\n    currentState: BaseState = null;\n    constructor(parameters) {\n        this.stateMap = new Map();\n    }\n\n    initState() {\n        this.stateMap.set(IState.STATE_STANDING, new StadingState(this));\n        this.stateMap.set(IState.STATE_JUMPING, new JumpingState(this));\n        this.stateMap.set(IState.STATE_DUCKING, new DuckingState(this));\n        this.stateMap.set(IState.STATE_DIVING, new DivingState(this));\n    }\n\n    changeState(state: IState) {\n        if (this.currentState) {\n            this.currentState.end();\n        }\n        this.currentState = this.stateMap.get(state);\n        if (this.currentState) {\n            this.currentState.begin();\n        }\n    }\n\n    update(dt: number) {\n        if (this.currentState) {\n            this.currentState.update(dt);\n        }\n    }\n}\n\nexport enum IState {\n    STATE_STANDING,\n    STATE_JUMPING,\n    STATE_DUCKING,\n    STATE_DIVING\n}"]}
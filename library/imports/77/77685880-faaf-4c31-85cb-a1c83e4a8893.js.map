{"version":3,"sources":["../../../../../assets/script/components/assets/script/components/listview.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/script/components","sourcesContent":["import { LayoutUtil } from \"./layout_utils\"\n\nexport class ListView {\n    private scrollview: cc.ScrollView;\n    private mask: cc.Node;\n    private content: cc.Node;\n    private item_tpl: cc.Node;\n    private node_pool: cc.Node[];\n\n    private dir: number;\n    private width: number;\n    private height: number;\n    private gap_x: number;\n    private gap_y: number;\n    private row: number;\n    private col: number;\n    private item_width: number;\n    private item_height: number;\n    private cb_host: any;\n    private item_setter: (item: cc.Node, data: any, index: number) => void;\n    private recycle_cb: (item: cc.Node) => void;\n    private select_cb: (data: any, index: number) => void;\n    private select_setter: (item: cc.Node, is_select: boolean, index: number) => void;\n    private scroll_to_end_cb: (event: any) => void;\n    private auto_scrolling: boolean;\n    private items: ListItem[];\n    private start_index: number;\n    private stop_index: number;\n    private _datas: any[];\n    private _selected_index: number = -1;\n\n    constructor(params: ListViewParams) {\n        this.scrollview = params.scrollview;\n        this.mask = params.mask;\n        this.content = params.content;\n        this.item_tpl = params.item_tpl;\n        this.item_tpl.active = false;\n        this.item_width = this.item_tpl.width;\n        this.item_height = this.item_tpl.height;\n        this.dir = params.direction || ListViewDir.Vertical;\n        this.width = params.width || this.mask.width;\n        this.height = params.height || this.mask.height;\n        this.gap_x = params.gap_x || 0;\n        this.gap_y = params.gap_y || 0;\n        this.row = params.row || 1;\n        this.col = params.column || 1;\n        this.cb_host = params.cb_host;\n        this.item_setter = params.item_setter;\n        this.recycle_cb = params.recycle_cb;\n        this.select_cb = params.select_cb;\n        this.select_setter = params.select_setter;\n        this.scroll_to_end_cb = params.scroll_to_end_cb;\n        this.auto_scrolling = params.auto_scrolling || false;\n        this.node_pool = [];\n\n        if (this.dir == ListViewDir.Vertical) {\n            let real_width: number = (this.item_width + this.gap_x) * this.col - this.gap_x;\n            if (real_width > this.width) {\n                cc.info(\"real width > width, resize scrollview to realwidth,\", this.width, \"->\", real_width);\n                this.width = real_width;\n            }\n            this.content.width = this.width;\n        }\n        else {\n            let real_height: number = (this.item_height + this.gap_y) * this.row - this.gap_y;\n            if (real_height > this.height) {\n                cc.info(\"real height > height, resize scrollview to realheight,\", this.height, \"->\", real_height);\n                this.height = real_height;\n            }\n            this.content.height = this.height;\n        }\n        this.mask.setContentSize(this.width, this.height);\n        this.mask.addComponent(cc.Mask);\n        this.scrollview.node.setContentSize(this.width, this.height);\n        this.scrollview.vertical = this.dir == ListViewDir.Vertical;\n        this.scrollview.horizontal = this.dir == ListViewDir.Horizontal;\n        this.scrollview.inertia = true;\n        this.scrollview.node.on(\"scrolling\", this.on_scrolling, this);\n        this.scrollview.node.on(\"scroll-to-bottom\", this.on_scroll_to_end, this);\n        this.scrollview.node.on(\"scroll-to-right\", this.on_scroll_to_end, this);\n        // cc.info(\"constructor\", this.mask.width, this.mask.height, this.scrollview.node.width, this.scrollview.node.height, this.content.width, this.content.height);\n    }\n\n    private on_scroll_to_end(event: any) {\n        if (this.scroll_to_end_cb) {\n            let param = {\n                endIndex: this.items.length\n            }\n            this.scroll_to_end_cb.call(this.cb_host, param);\n        }\n    }\n\n    private on_scrolling() {\n        if (!this.items || !this.items.length) {\n            return;\n        }\n        if (this.dir == ListViewDir.Vertical) {\n            let posy: number = this.content.y;\n            // cc.info(\"onscrolling, content posy=\", posy);\n            if (posy < 0) {\n                posy = 0;\n            }\n            if (posy > this.content.height - this.height) {\n                posy = this.content.height - this.height;\n            }\n            let start: number = 0;\n            let stop: number = this.items.length - 1;\n            let viewport_start: number = -posy;\n            let viewport_stop: number = viewport_start - this.height;\n            while (this.items[start].y - this.item_height > viewport_start) {\n                start++;\n            }\n            while (this.items[stop].y < viewport_stop) {\n                stop--;\n            }\n\n            if (start != this.start_index && stop != this.stop_index) {\n                this.start_index = start;\n                this.stop_index = stop;\n                // cc.info(\"render_from:\", start, stop);\n                this.render_items();\n            }\n        }\n        else {\n            let posx: number = this.content.x;\n            // cc.info(\"onscrolling, content posx=\", posx);\n            if (posx > 0) {\n                posx = 0;\n            }\n            if (posx < this.width - this.content.width) {\n                posx = this.width - this.content.width;\n            }\n            let start: number = 0;\n            let stop: number = this.items.length - 1;\n            let viewport_start: number = -posx;\n            let viewport_stop: number = viewport_start + this.width;\n            while (this.items[start].x + this.item_width < viewport_start) {\n                start++;\n            }\n            while (this.items[stop].x > viewport_stop) {\n                stop--;\n            }\n            if (start != this.start_index && stop != this.stop_index) {\n                this.start_index = start;\n                this.stop_index = stop;\n                // cc.info(\"render_from:\", start, stop);\n                this.render_items();\n            }\n        }\n    }\n\n    select_item(index) {\n        if (index == this._selected_index) {\n            return;\n        }\n        if (this._selected_index != -1) {\n            this.inner_select_item(this._selected_index, false);\n        }\n        this.inner_select_item(index, true);\n    }\n\n    private inner_select_item(index: number, is_select: boolean) {\n        let item: ListItem = this.items[index];\n        if (!item) {\n            cc.warn(\"inner_select_item index is out of range{\", 0, this.items.length - 1, \"}\", index);\n            return;\n        }\n        item.is_select = is_select;\n        if (item.node && this.select_setter) {\n            this.select_setter.call(this.cb_host, item.node, is_select, index);\n        }\n        if (is_select) {\n            this._selected_index = index;\n            if (this.select_cb) {\n                this.select_cb.call(this.cb_host, item.data, index);\n            }\n        }\n    }\n\n    private spawn_node(index: number): cc.Node {\n        let node: cc.Node = this.node_pool.pop();\n        if (!node) {\n            node = cc.instantiate(this.item_tpl);\n            node.active = true;\n            // cc.info(\"spawn_node\", index);\n        }\n        node.parent = this.content;\n        return node;\n    }\n\n    private recycle_item(item: ListItem) {\n        if (item.node && cc.isValid(item.node)) {\n            if (this.recycle_cb) {\n                this.recycle_cb.call(this.cb_host, item.node);\n            }\n            item.node.removeFromParent();\n            this.node_pool.push(item.node);\n            item.node = null;\n        }\n    }\n\n    private clear_items() {\n        if (this.items) {\n            this.items.forEach((item) => {\n                this.recycle_item(item);\n            });\n        }\n    }\n\n    private render_items() {\n        let item: ListItem;\n        for (let i: number = 0; i < this.start_index; i++) {\n            item = this.items[i];\n            if (item.node) {\n                // cc.info(\"recycle_item\", i);\n                this.recycle_item(item);\n            }\n        }\n        for (let i: number = this.items.length - 1; i > this.stop_index; i--) {\n            item = this.items[i];\n            if (item.node) {\n                // cc.info(\"recycle_item\", i);\n                this.recycle_item(item);\n            }\n        }\n        for (let i: number = this.start_index; i <= this.stop_index; i++) {\n            item = this.items[i];\n            if (!item.node) {\n                // cc.info(\"render_item\", i);\n                item.node = this.spawn_node(i);\n                this.item_setter.call(this.cb_host, item.node, item.data, i);\n                if (this.select_setter) {\n                    this.select_setter.call(this.cb_host, item.node, item.is_select, i);\n                }\n            }\n            item.node.setPosition(item.x, item.y);\n        }\n    }\n\n    private pack_item(data: any): ListItem {\n        return { x: 0, y: 0, data: data, node: null, is_select: false };\n    }\n\n    private layout_items(start: number) {\n        // cc.info(\"layout_items, start=\", start);\n        for (let index: number = start, stop: number = this.items.length; index < stop; index++) {\n            let item: ListItem = this.items[index];\n            if (this.dir == ListViewDir.Vertical) {\n                [item.x, item.y] = LayoutUtil.vertical_layout(index, this.item_width, this.item_height, this.col, this.gap_x, this.gap_y);\n            }\n            else {\n                [item.x, item.y] = LayoutUtil.horizontal_layout(index, this.item_width, this.item_height, this.row, this.gap_x, this.gap_y);\n            }\n        }\n    }\n\n    private resize_content() {\n        if (this.items.length <= 0) {\n            this.content.width = 0;\n            this.content.height = 0;\n            return;\n        }\n        let last_item: ListItem = this.items[this.items.length - 1];\n        if (this.dir == ListViewDir.Vertical) {\n            this.content.height = Math.max(this.height, this.item_height - last_item.y);\n        }\n        else {\n            this.content.width = Math.max(this.width, last_item.x + this.item_width);\n        }\n        cc.info(\"resize_content\", this.mask.width, this.mask.height, this.scrollview.node.width, this.scrollview.node.height, this.content.width, this.content.height);\n    }\n\n    set_data(datas: any[]) {\n        this.clear_items();\n        this.items = [];\n        this._datas = datas;\n        datas.forEach((data) => {\n            let item: ListItem = this.pack_item(data);\n            this.items.push(item);\n        });\n        this.layout_items(0);\n        this.resize_content();\n        this.start_index = -1;\n        this.stop_index = -1;\n        if (this.dir == ListViewDir.Vertical) {\n            this.content.y = 0;\n        }\n        else {\n            this.content.x = 0;\n        }\n        if (this.items.length > 0) {\n            this.on_scrolling();\n        }\n    }\n\n    insert_data(index: number, ...datas: any[]) {\n        if (datas.length == 0) {\n            cc.info(\"nothing to insert\");\n            return;\n        }\n        if (!this.items) {\n            this.items = [];\n        }\n        if (!this._datas) {\n            this._datas = [];\n        }\n        if (index < 0 || index > this.items.length) {\n            cc.warn(\"invalid index\", index);\n            return;\n        }\n        let is_append: boolean = index == this.items.length;\n        let items: ListItem[] = [];\n        datas.forEach((data) => {\n            let item: ListItem = this.pack_item(data);\n            items.push(item);\n        });\n        this._datas.splice(index, 0, ...datas);\n        this.items.splice(index, 0, ...items);\n        this.layout_items(index);\n        this.resize_content();\n        this.start_index = -1;\n        this.stop_index = -1;\n\n        if (this.auto_scrolling && is_append) {\n            this.scroll_to_end();\n        }\n        this.on_scrolling();\n    }\n\n    remove_data(index: number, count: number = 1) {\n        if (!this.items) {\n            cc.info(\"call set_data before call this method\");\n            return;\n        }\n        if (index < 0 || index >= this.items.length) {\n            cc.warn(\"invalid index\", index);\n            return;\n        }\n        if (count < 1) {\n            cc.info(\"nothing to remove\");\n            return;\n        }\n        let old_length: number = this.items.length;\n        let del_items: ListItem[] = this.items.splice(index, count);\n        this._datas.splice(index, count);\n        //回收node\n        del_items.forEach((item) => {\n            this.recycle_item(item);\n        });\n\n        //重新排序index后面的\n        if (index + count < old_length) {\n            this.layout_items(index);\n        }\n        this.resize_content();\n        if (this.items.length > 0) {\n            this.start_index = -1;\n            this.stop_index = -1;\n            this.on_scrolling();\n        }\n    }\n\n    append_data(...datas: any[]) {\n        if (!this.items) {\n            this.items = [];\n        }\n        this.insert_data(this.items.length, ...datas);\n    }\n\n    scroll_to(index: number) {\n        if (this.dir == ListViewDir.Vertical) {\n            const min_y = this.height - this.content.height;\n            if (min_y >= 0) {\n                cc.info(\"no need to scroll\");\n                return;\n            }\n            let [_, y] = LayoutUtil.vertical_layout(index, this.item_width, this.item_height, this.col, this.gap_x, this.gap_y);\n            if (y < min_y) {\n                y = min_y;\n                cc.info(\"content reach bottom\");\n            }\n            if (y > 0) {\n                y = 0;\n                cc.info(\"content reach top\");\n            }\n            this.scrollview.setContentPosition(cc.v2(this.content.getPositionX(), -y));\n            this.on_scrolling();\n        }\n        else {\n            const max_x = this.content.width - this.width;\n            if (max_x <= 0) {\n                cc.info(\"no need to scroll\");\n                return;\n            }\n            let [x, _] = LayoutUtil.horizontal_layout(index, this.item_width, this.item_height, this.row, this.gap_x, this.gap_y);\n            if (x > max_x) {\n                x = max_x;\n                cc.info(\"content reach right\");\n            }\n            if (x < 0) {\n                x = 0;\n                cc.info(\"content reach left\");\n            }\n            this.scrollview.setContentPosition(cc.v2(-x, this.content.getPositionY()));\n            this.on_scrolling();\n        }\n    }\n\n    scroll_to_end() {\n        if (this.dir == ListViewDir.Vertical) {\n            this.scrollview.scrollToBottom();\n        }\n        else {\n            this.scrollview.scrollToRight();\n        }\n    }\n\n    refresh_item(index: number, data: any) {\n        if (!this.items) {\n            cc.info(\"call set_data before call this method\");\n            return;\n        }\n        if (index < 0 || index >= this.items.length) {\n            cc.warn(\"invalid index\", index);\n            return;\n        }\n        let item: ListItem = this.items[index];\n        item.data = data;\n        this._datas[index] = data;\n        if (item.node) {\n            if (this.recycle_cb) {\n                this.recycle_cb.call(this.cb_host, item.node);\n            }\n            this.item_setter.call(this.cb_host, item.node, item.data, index);\n        }\n    }\n\n    destroy() {\n        this.clear_items();\n        this.node_pool.forEach((node) => {\n            node.destroy();\n        });\n        this.node_pool = null;\n        this.items = null;\n        this._datas = null;\n\n        if (cc.isValid(this.scrollview.node)) {\n            this.scrollview.node.off(\"scrolling\", this.on_scrolling, this);\n            this.scrollview.node.off(\"scroll-to-bottom\", this.on_scroll_to_end, this);\n            this.scrollview.node.off(\"scroll-to-right\", this.on_scroll_to_end, this);\n        }\n    }\n\n    get datas(): any[] {\n        return this._datas;\n    }\n\n    get selected_index(): number {\n        return this._selected_index;\n    }\n\n    get selectd_data(): any {\n        let item: ListItem = this.items[this._selected_index];\n        if (item) {\n            return item.data;\n        }\n        return null;\n    }\n}\n\nexport enum ListViewDir {\n    Vertical = 1,\n    Horizontal = 2,\n}\n\ntype ListViewParams = {\n    scrollview: cc.ScrollView;\n    mask: cc.Node;\n    content: cc.Node;\n    item_tpl: cc.Node;\n    direction?: ListViewDir;\n    width?: number;\n    height?: number;\n    gap_x?: number;\n    gap_y?: number;\n    row?: number;                                                                //水平方向排版时，垂直方向上的行数\n    column?: number;                                                             //垂直方向排版时，水平方向上的列数\n    cb_host?: any;                                                               //回调函数host\n    item_setter: (item: cc.Node, data: any, index: number) => void;                   //item更新setter\n    recycle_cb?: (item: cc.Node) => void;                                           //回收时的回调\n    select_cb?: (data: any, index: number) => void;                                  //item选中回调\n    select_setter?: (item: cc.Node, is_select: boolean, index: number) => void;       //item选中效果setter\n    scroll_to_end_cb?: (event: any) => void;                                                 //滚动到尽头的回调\n    auto_scrolling?: boolean;                                                    //append时自动滚动到尽头\n}\n\ntype ListItem = {\n    x: number;\n    y: number;\n    data: any;\n    node: cc.Node;\n    is_select: boolean;\n}"]}